#!/bin/bash

#------------------------------------------------
# Sylvain Watelet - 27/10/2014
# swatelet@ulg.ac.be
#
# This script transforms ascii UV and/or RL input files
# into binary gridded ones, which are needed by diva when
# asking for constraints (advection) or variable relative 
# length field.
#
# REMARK : This is NOT ONLY a format transformation, the 
# output is the ANALYSE of the input files (with low 
# SNR, high CL and reference field equal to zero (UV) or
# data mean (RL)). 
#
# REMARK 2 : By default, the domain (lon, lat, x and y step)
# is the one defined in the original ./input/param.par file.
#------------------------------------------------

# Check these 2 parameters (one of them has to be equal to 1) :

RL=1 # relative length fields creation (=1)
UV=0 # advection fields creation (=1)

#------------------------------------------------
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# END OF USER MODIFICATIONS UNLESS AWARE OF RISKS
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#------------------------------------------------

if [ "$RL" == "1" ] && [ "$UV" == "1" ]
then
echo "Warning : Please check UV and RL parameters ! No more than one parameter can be equal to 1."
exit
fi

mkdir -p tmp
driver="driver"
cp $driver ./tmp/${driver}"_bkp"
cp varlist ./tmp/varlist_bkp
cp yearlist ./tmp/yearlist_bkp
cp monthlist ./tmp/monthlist_bkp
cp ./input/param.par ./tmp/param.par_bkp

#------------------------------------------------
# Parameters files reading
#------------------------------------------------

{
read drivercomment1
read driverflag1
read drivercomment2
read driverflag2
read drivercomment3
read driverflag3
read drivercomment4
read driverflag4
read drivercomment5
read driverflag5
read drivercomment6
read driverflag6
read drivercomment7
read driverflag7
read drivercomment8
read driverflag8
read drivercomment9
read driverflag9
read drivercomment10
read driverflag10
read drivercomment11
read driverflag11
read drivercomment12
read driverflag12
read drivercomment13
read driverflag13
read drivercomment14
read driverflag14
read drivercomment15
read driverflag15
} < $driver

{
read paramcomment1
read paramflag1
read paramcomment2
read paramflag2
read paramcomment3
read paramflag3
read paramcomment4
read paramflag4
read paramcomment5
read paramflag5
read paramcomment6
read paramflag6
read paramcomment7
read paramflag7
read paramcomment8
read paramflag8
read paramcomment9
read paramflag9
read paramcomment10
read paramflag10
read paramcomment11
read paramflag11
read paramcomment12
read paramflag12
read paramcomment13
read paramflag13
} < ./input/param.par

#------------------------------------------------
# New parameters files
#------------------------------------------------

year1="1000"
year2="1000"
month1="01"
month2="01"
i=0

if [ "$UV" == "1" ]
then
	echo "Creation of binary advection fields via a run of diva..."
	ireg=0
	var1="Uvel"
	var2="Vvel"
	rm -f ./output/3Danalysis/$var1.*.3DNCinfo
	rm -f ./output/3Danalysis/$var1.*.3DNCliste
	rm -f ./output/3Danalysis/$var2.*.3DNCinfo
	rm -f ./output/3Danalysis/$var2.*.3DNCliste
	for Uascii in `ls ./input/divaUVcons/Uvel.*.ascii`
	do
		i=$(($i+1))
		depth=${Uascii:24:5}
		if [ "$i" == "1" ]
		then
			depth1=$(($depth-10000))
		fi
		cp $Uascii input/divadata/$var1.$year1$year2.$month1$month2.$depth
	done
	depth2=$(($depth-10000))
	for Vascii in `ls ./input/divaUVcons/Vvel.*.ascii`
	do
		depth=${Vascii:24:5}
		cp $Vascii input/divadata/$var2.$year1$year2.$month1$month2.$depth
	done
	
	echo "$var1
$var2" > varlist

	echo "$year1$year2" > yearlist	
	echo "$month1$month2" > monthlist	
	
	echo "$drivercomment1
0
$drivercomment2
1
$drivercomment3
0
$drivercomment4
0
$drivercomment5
0
$drivercomment6
0.1
$drivercomment7
50.
$drivercomment8
0.01
$drivercomment9
5
$drivercomment10
1
$drivercomment11
$depth1
$drivercomment12
$depth2
$drivercomment13
0
$drivercomment14
0
$drivercomment15
0" > $driver

	echo "$paramcomment1
10
$paramcomment2
0
$paramcomment3
0
$paramcomment4
$ireg
$paramcomment5
$paramflag5
$paramcomment6
$paramflag6
$paramcomment7
$paramflag7
$paramcomment8
$paramflag8
$paramcomment9
$paramflag9
$paramcomment10
$paramflag10
$paramcomment11
$paramflag11
$paramcomment12
0.1
$paramcomment13
1.0" > ./input/param.par

elif [ "$RL" == "1" ]
then
	echo "Creation of binary relative length fields via a run of diva..."
	ireg=1
	var1="RL"
	rm -f ./output/3Danalysis/$var1.*.3DNCinfo
	rm -f ./output/3Danalysis/$var1.*.3DNCliste
	for RLascii in `ls ./input/divaparam/RL.*.ascii`
	do
		i=$(($i+1))
		size=${#RLascii}
		depth=${RLascii:$(($size-11)):5}
		var=${RLascii:21:$(($size-33))}
		if [ "$i" == "1" ]
		then
			depth1=$(($depth-10000))
		fi
		cp $RLascii input/divadata/$var1.$year1$year2.$month1$month2.$depth
	done
	depth2=$(($depth-10000))
	
	echo "$var1" > varlist

	echo "$year1$year2" > yearlist	
	echo "$month1$month2" > monthlist	
	
	echo "$drivercomment1
0
$drivercomment2
1
$drivercomment3
0
$drivercomment4
0
$drivercomment5
0
$drivercomment6
0.1
$drivercomment7
50.
$drivercomment8
0.01
$drivercomment9
5
$drivercomment10
1
$drivercomment11
$depth1
$drivercomment12
$depth2
$drivercomment13
0
$drivercomment14
0
$drivercomment15
0" > $driver

	echo "$paramcomment1
10
$paramcomment2
0
$paramcomment3
0
$paramcomment4
$ireg
$paramcomment5
$paramflag5
$paramcomment6
$paramflag6
$paramcomment7
$paramflag7
$paramcomment8
$paramflag8
$paramcomment9
$paramflag9
$paramcomment10
$paramflag10
$paramcomment11
$paramflag11
$paramcomment12
0.1
$paramcomment13
1.0" > ./input/param.par
fi

#------------------------------------------------
# Making analysis
#------------------------------------------------

if [ "$UV" == "1" ] || [ "$RL" == "1" ]
then
./divadoall
else
echo "Warning : Please check UV and RL parameters !"
fi

#------------------------------------------------
# Copying output to input directory
#------------------------------------------------

if [ "$UV" == "1" ]
then
	for i in `seq $depth1 $depth2`
	do
	rdepth=$(($i+10000))
	cp ./output/3Danalysis/Fields/$var1.*.$rdepth.anl ./input/divaUVcons/$var1.$rdepth
	cp ./output/3Danalysis/Fields/$var2.*.$rdepth.anl ./input/divaUVcons/$var2.$rdepth
	done
	cp ./output/3Danalysis/Fields/GridInfo.dat ./input/divaUVcons/UVinfo.dat
fi

if [ "$RL" == "1" ]
then
	for i in `seq $depth1 $depth2`
	do
	rdepth=$(($i+10000))
	cp ./output/3Danalysis/Fields/$var1.*.$rdepth.anl ./input/divaparam/$var1.$var.$rdepth
	done
	cp ./output/3Danalysis/Fields/GridInfo.dat ./input/divaparam/RLinfo.dat_erasethispart
fi

#read -t 10000

cp ./tmp/${driver}"_bkp" $driver
cp ./tmp/varlist_bkp varlist
cp ./tmp/yearlist_bkp yearlist
cp ./tmp/monthlist_bkp monthlist
cp ./tmp/param.par_bkp ./input/param.par
rm -r ./tmp/
echo "The end."
