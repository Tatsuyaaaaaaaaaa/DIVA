#!/bin/bash

source divalogging

infolog --
infolog "   Generalized Cross Validation"
infolog --

divaecho ' '
<<<<<<< d883ddfeb2a956d3b915ee43923b3ae4a78187cc
divaecho "GCV logs written in ${divagcvlog}"
divaecho ' '

divaecho ' '
=======
>>>>>>> improved logging and indentation
divaecho "/////////////////////////////////////////// " > ${divagcvlog}
divaecho "      Generalized Cross Validation          " >> ${divagcvlog}
divaecho "/////////////////////////////////////////// " >> ${divagcvlog}
divaecho ' ' >> ${divagcvlog}


cp ./input/param.par  ./input/param.par.ori
if [ -f ./input/valatxy.coord.ori ]; then
  rm -f ./input/valatxy.coord.ori
fi

if [ -f ./input/valatxy.coord ]; then
  mv ./input/valatxy.coord ./input/valatxy.coord.ori
fi
rm -f ./output/gcv.dat

if [ -f ./input/gcvsampling.dat ]; then
  #Create mesh once if no mesh present
<<<<<<< d883ddfeb2a956d3b915ee43923b3ae4a78187cc
  if [ -f ./meshgenwork/fort.22 ]; then
=======
  if [ -f ./meshgenwork/fort.22 ]; then
>>>>>>> improved logging and indentation
    warnline >> ${divagcvlog}
    warnlog "Mesh files already exist, hope they are correct: otherwise execute divamesh " >> ${divagcvlog}
    warnline >> ${divagcvlog}
  else
    divamesh
  fi
else
<<<<<<< d883ddfeb2a956d3b915ee43923b3ae4a78187cc
  errorline | tee -a $divacvlog
  errorlog "Need to provide gcvsampling.dat in ./input ! " | tee -a ${divagcvlog}
  errorline | tee -a $divacvlog
=======
  divaecho "Need to provide gcvsampling.dat in ./input ! " | tee -a ${divagcvlog}
>>>>>>> improved logging and indentation
fi

ijm=0
for gcv in `cat ./input/gcvsampling.dat`
do
  divaecho ' ' | tee -a ${divagcvlog}
  divaecho "===============================================" | tee -a ${divagcvlog}
  divaecho "Generalized Cross Validation  with value ${gcv}" | tee -a ${divagcvlog}
  divaecho "===============================================" | tee -a ${divagcvlog}
  let ijm=$(($ijm+1))
  #head -17 ./input/param.par.ori > bidon
  #
  head -5 ./input/param.par.ori > bidon
  echo 0 >> bidon
  head -17 ./input/param.par.ori | tail -11 >> bidon
  #
  echo 1 >> bidon
  echo   >> bidon
  echo 1 >> bidon
  echo   >> bidon
  echo -99 >> bidon
  echo >> bidon
  echo $gcv >> bidon
  #tail -2 ./input/param.par.ori >> bidon
  # no error field
  echo >> bidon
  echo 0 >> bidon
  mv bidon ./input/param.par
<<<<<<< d883ddfeb2a956d3b915ee43923b3ae4a78187cc

  ./divacalc
  cat  ${divagcvlog} $divacalclog > bidon
  mv bidon ${divagcvlog}

  FILENAME=./divawork/fort.77
  {
  read gcvval
  } < $FILENAME
  FILENAME=bidon
  echo $gcv > bidon
  {
  read gcv
=======

  ./divacalc
  cat  ${divagcvlog} $divacalclog > bidon
  mv bidon ${divagcvlog}

  FILENAME=./divawork/fort.77
  {
  read gcvval
  } < $FILENAME
  FILENAME=bidon
  echo $gcv > bidon
  {
  read gcv
>>>>>>> improved logging and indentation
  } < $FILENAME
  rm bidon
  divaecho $gcvval >> ${divagcvlog}
  divaecho $gcv $gcvval >> ${divagcvlog}
<<<<<<< d883ddfeb2a956d3b915ee43923b3ae4a78187cc

=======

>>>>>>> improved logging and indentation
  echo $gcv $gcvval >> ./output/gcv.dat
  ########for testing
  itestGCV=0
  itestsingle=0
  if [ "$itestGCV" != "0" ]; then
    cp ./output/fieldatdatapoint.anl ./divawork/fort.71
    cp ./input/data.dat ./divawork/fort.20
    cd ./divawork
    ../input/GCVtest/exactgcv.a
    cat fort.30 >> ../input/GCVtest/exactgcv.dat
    cd ..
  fi

  if [ "$itestsingle" != "0" ]; then
    cat ./output/fieldatdatapoint.anl >> ./input/GCVtest/localvalue.dat
  fi
  ########end testing
  divaecho "=============================================" | tee -a ${divagcvlog}
  divaecho "Finished working with value $gcv"              | tee -a ${divagcvlog}
  divaecho "=============================================" | tee -a ${divagcvlog}
  divaecho ' ' | tee -a >> ${divagcvlog}
done

mv ./input/param.par.ori ./input/param.par

if [ -f ./input/valatxy.coord.ori ]; then
  mv ./input/valatxy.coord.ori ./input/valatxy.coord
fi
cp ./output/gcv.dat ./divawork/fort.11
cd divawork
divaecho "Looking for the minimum of GCV " >> ${divagcvlog}
divaecho ' ' >> ${divagcvlog}

if [ -f ../input/gcvsampling.dat ]; then
  ../../bin/findmin.a >> ../output/diva.log
  if [ $? -ne 0 ]; then
    errorlog ' ' | tee -a ${divagcvlog} ${divalog}
    errorline | tee -a ${divagcvlog} ${divalog}
    errorlog "A problem was encountered during execution !" | tee -a ${divagcvlog} ${divalog}
    errorlog "          divagcv      findmin.a		  " | tee -a ${divagcvlog} ${divalog}
    errorlog "Check execution track			  " | tee -a ${divagcvlog} ${divalog}
    errorline | tee -a ${divagcvlog} ${divalog}
  fi
else
  errorlog ' ' | tee -a ${divagcvlog} ${divalog}
  errorline | tee -a ${divalog}
  errorlog "A problem was encountered during execution !" | tee -a ${divalog}
  errorlog "Check execution track 			" | tee -a ${divalog}
  errorline | tee -a ${divalog}
fi

mv fort.12 ../output/gcvsnvar.dat
divaecho ' ' | tee -a ${divagcvlog}
divaecho ---------------------------------------- | tee -a ${divagcvlog}
divaecho 'GCV finished' | tee -a ${divagcvlog}
divaecho 'Estimated value of SNR = ' $(awk 'FNR == 2 { print; exit }' ../output/gcvsnvar.dat) | tee -a ${divagcvlog}

divaecho "Results written in ./output/gcvsnvar.dat" | tee -a ${divagcvlog}
divaecho "----------------------------------------" | tee -a ${divagcvlog}
divaecho ' ' >> ${divagcvlog}
divaecho "-----------------------------------------------------" >> ${divagcvlog}
divaecho "Creating adapted param.par in ./output/param.par.gcv " >> ${divagcvlog}
divaecho "-----------------------------------------------------" >> ${divagcvlog}a

head -23 ../input/param.par  > ../output/param.par.gcv
head -2 ../output/gcvsnvar.dat | tail -1 >> ../output/param.par.gcv
head -25 ../input/param.par | tail -1 >> ../output/param.par.gcv
head -4 ../output/gcvsnvar.dat  | tail -1 >> ../output/param.par.gcv

if [ "$1" == "-r" ]; then
  divaecho "=======================================================" | tee -a ${divagcvlog}
  divaecho "Replacing SNR by new value from GCV in param.par  	   " | tee -a ${divagcvlog}
  cd ..
  cp -v ./input/param.par ./input/param.par.old
  cp -v ./output/param.par.gcv ./input/param.par
  divaecho "======================================================="
else
  cd ..
fi
