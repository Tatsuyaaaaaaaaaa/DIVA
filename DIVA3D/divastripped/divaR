#!/bin/bash
export LC_ALL=C

LC=$(head -2 ./input/param.par | tail -1 | awk '{print $1}')
SNR=$(head -24 ./input/param.par | tail -1 | awk '{print $1}')

echo SNR and LC originaly is $SNR  $LC
cp ./input/param.par ./input/param.par.oriR

# No need to overload calculations during iterations
dvchpar NX 1
dvchpar NY 1
dvchpar ispec 0



LCR=0.08
SNRR=0.7


divamesh

#
cat ./input/data.dat | awk '{if ( NF<4 ) {$4=1}; print $1,$2,$3,$4} ' > ./input/data.dat.oriR

cp ./input/data.dat.oriR ./input/data.dat

# try without changing grid

# HK1
divacalc

# I -HK1
paste ./input/data.dat.oriR ./output/fieldatdatapoint.anl | awk '{print $1,$2,$3-$7,$4}' > ./input/data.dat

cp ./input/data.dat ./input/data.dat.x




i=0
while [ $i -lt 10 ]
do
 let i=$i+1
 echo $i
 dvchpar LC $LCR
 dvchpar SNR $SNRR
 divacalc
 dvouttoin
 dvchpar LC $LC
 dvchpar SNR $SNR
 divacalc
paste ./input/data.dat.x ./output/fieldatdatapoint.anl | awk '{print $1,$2,$3+$7,$4}' > ./input/data.dat
echo Converging ?
head -1 ./input/data.dat

done

# now data.dat contains y
#
dvchpar LC $LCR
dvchpar SNR $SNRR
divacalc
# Now finally prepare data to be analysed
paste ./input/data.dat.oriR ./output/fieldatdatapoint.anl | awk '{print $1,$2,$3-$7,$4}' > ./input/data.dat

# Final calculation with original parameters
mv ./input/param.par.oriR ./input/param.par

divacalc