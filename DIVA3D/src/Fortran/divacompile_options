#!/bin/bash

# Name of the fortran compiler
#-----------------------------

compiler="gfortran"
#compiler=ifort

# To use parall version, put value to 1
#-------------------------------------
DIVA_PARALLEL=1
#

# Compilation flags
#-----------------

# !!! The flag -DDIVAHUGEMEMORY allow larger analysis and/or finer meshes. Disable it in case of compilation problems.

flags='-O3  -frecord-marker=4  -cpp  -DDIVAITERATIVE'  # -DDIVAHUGEMEMORY' # ' -DDIVABINARYFILESMESH -DDIVABINARYFILES '
#flags='-O3' 			# no optimization

flagscalc=' -O3 -cpp   -DDIVAITERATIVE -Wall -fbounds-check ' #-DDIVAHUGEMEMORY'
# -DALLODYZERO if ZEROS in ALLODY to be forced, time consuming...

if [ "$DIVA_PARALLEL" = 1 ]
then
echo Going to use parallel version
flagscalc='-O3 -cpp -fopenmp -DDIVAITERATIVE -DDIVAPARALLEL -DDIVAHUGEMEMORY' # -DDIVABINARYFILESMESH -DDIVABINARYFILES ' #'
echo $flagscalc

fi

# Netcdf library
#---------------

ncconfigok=$(type -P nc-config | wc -l)
nfconfigok=$(type -P nf-config | wc -l)

### added tests on nc-config ###
nclib=`nc-config --flibs`
ncinc=`nc-config --fflags`
nccompiler=`nc-config --fc`

if [ "$nclib" == "" ]
then
ncconfigok="0"
fi

if [ "$ncinc" == "" ]
then
ncconfigok="0"
fi

if [ "$nccompiler" == "" ]
then
ncconfigok="0"
fi
### ###

echo nc-config $ncconfigok
echo nf-config $nfconfigok

if [ "$ncconfigok" != "0" ]
then
nclib=`nc-config --flibs`
echo "nclib="$nclib
ncinc=`nc-config --fflags`
echo "ncinc="$ncinc
compiler=`nc-config --fc`
echo "compiler="$compiler
else
   if [ "$nfconfigok" != "0" ]
   then
    nclib=`nf-config --flibs`
# or by hand
#    nclib=/usr/lib/libnetcdff.dll.a
    echo "nclib="$nclib
    ncinc=`nf-config --fflags`
    echo "ncinc="$ncinc
    compiler=`nf-config --fc`
    echo "compiler="$compiler
   else
# put netcdlibrary by hand
   nclib=/usr/lib/libnetcdff.dll.a	
   ncinc=-I/usr/include
   fi
fi
# Use of Plplot (creation of scientific plots)
#--------------

Plplot=Plplot
Plplot=NoPlplot

# gui = 1 for Graphical User Interface programs to be compiled
gui=1

# netcdf = 1 for NetCDF programs to be compiled
netcdf=1

echo 'flags = '${flags}
echo 'flagscalc = '${flagscalc}
echo 'ncinc = '${ncinc}
echo 'nclib = '${nclib}
